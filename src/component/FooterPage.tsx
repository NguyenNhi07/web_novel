import { useState } from "react";
import "../Css/footerPage.css";

interface Comment {
  text: string;
  time: string;
  replies: Reply[];
}

interface Reply {
  text: string;
  time: string;
}

function FooterCard() {
  const [comment, setComment] = useState<string>("");
  const [comments, setComments] = useState<Comment[]>([]);
  const [replyToIndex, setReplyToIndex] = useState<number | null>(null);
  const [replyText, setReplyText] = useState<string>("");

  const handleCommentChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setComment(e.target.value);
  };

  const handleCommentSubmit = () => {
    if (comment.trim()) {
      const now = new Date();
      const timestamp = `${now.getDate().toString().padStart(2, "0")}/${(
        now.getMonth() + 1
      )
        .toString()
        .padStart(2, "0")}/${now.getFullYear()} lúc ${now
        .getHours()
        .toString()
        .padStart(2, "0")}:${now.getMinutes().toString().padStart(2, "0")} ${
        now.getHours() >= 12 ? "Chiều" : "Sáng"
      }`;

      setComments([
        { text: comment, time: timestamp, replies: [] },
        ...comments,
      ]);
      setComment("");
    }
  };

  const handleReplyClick = (index: number) => {
    setReplyToIndex(index);
  };

  const handleReplyChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setReplyText(e.target.value);
  };

  const handleReplySubmit = (index: number) => {
    if (replyText.trim()) {
      const now = new Date();
      const replyTimestamp = `${now.getDate().toString().padStart(2, "0")}/${(
        now.getMonth() + 1
      )
        .toString()
        .padStart(2, "0")}/${now.getFullYear()} lúc ${now
        .getHours()
        .toString()
        .padStart(2, "0")}:${now.getMinutes().toString().padStart(2, "0")} ${
        now.getHours() >= 12 ? "Chiều" : "Sáng"
      }`;

      const updatedComments = [...comments];
      updatedComments[index].replies.push({
        text: replyText,
        time: replyTimestamp,
      });
      setComments(updatedComments);

      setReplyText("");
      setReplyToIndex(null);
    }
  };
  const handleCancelReply = () => {
    setReplyText("");
    setReplyToIndex(null);
  };

  return (
    <>
      {comments.length > 0 && (
        <div className="w-[804px] mt-[50px] bg-white">
          <div className="px-[70px] py-10">
            <p className="text-[21px] text-[#777777]">Có bình luận rồi nè ~</p>
          </div>
          <div className="border-t"></div>

          <div className="px-[70px] py-10">
            {comments.map((c, index) => (
              <>
                <div key={index} className="flex gap-4 mb-6">
                  <img
                    className="w-[65px] h-[65px] rounded-full"
                    src="https://1.gravatar.com/avatar/a1b64da80823a687a7c81ab3cf84a7f792244dee9126f280aef5835fc347a8d2?s=100&d=monsterid&r=G"
                    alt=""
                  />
                  <div className="flex flex-col gap-1">
                    <p className="text-lg text-[#666666]">
                      <strong>Cậu ấy</strong> nói:
                    </p>
                    <p className="text-base text-[#999999]">{c.time}</p>
                    <div className="text-[16.2px] text-[#777777]">{c.text}</div>
                    <div
                      onClick={() => handleReplyClick(index)}
                      className="mt-4 text-base text-[#999999] hover:cursor-pointer"
                    >
                      Trả lời
                    </div>
                  </div>
                </div>

                {replyToIndex === index && (
                  <>
                    <div className="mt-6">
                      <button
                        onClick={handleCancelReply}
                        className="text-[17px] text-[#1C7590] font-bold"
                      >
                        Huỷ trả lời
                      </button>
                      <div className="mt-4 w-full bg-white border border-[#dcdcde]">
                        <div className="h-[170px]">
                          <input
                            value={replyText}
                            onChange={handleReplyChange}
                            type="text"
                            className="w-full h-[50px] outline-none text-base px-5"
                            placeholder="Trả lời gì đây ta...."
                          />
                        </div>
                        <div className="border-t h-[74px] border-[#dcdcde] p-4 flex justify-end">
                          <button
                            onClick={() => handleReplySubmit(index)}
                            className="border border-[#dcdcde] rounded py-[7px] px-5 text-[#A7AAAD] text-sm"
                          >
                            Trả lời
                          </button>
                        </div>
                      </div>
                    </div>
                  </>
                )}
                {c.replies.length > 0 && (
                  <div className="mt-10 ml-8">
                    {c.replies.map((r, replyIndex) => (
                      <div key={replyIndex} className="flex gap-4 mb-4">
                        <img
                          className="w-[65px] h-[65px] rounded-full"
                          src="https://1.gravatar.com/avatar/a1b64da80823a687a7c81ab3cf84a7f792244dee9126f280aef5835fc347a8d2?s=100&d=monsterid&r=G"
                          alt=""
                        />
                        <div className="flex flex-col gap-1">
                          <p className="text-lg text-[#666666]">
                            <strong>Cậu ấy</strong> nói:
                          </p>
                          <p className="text-base text-[#999999]">{r.time}</p>
                          <div className="text-[16.2px] text-[#777777]">
                            {r.text}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </>
            ))}
          </div>
        </div>
      )}
      <div className="mt-[50px] comments-form p-[15px] w-[804px]">
        <div className="bg-[#fbf9ef] px-[70px] py-[35px] relative w-full">
          <svg
            className="absolute right-[75px] top-[35px] z-[5]"
            xmlns="http://www.w3.org/2000/svg"
            width="200"
            height="79"
            viewBox="0 0 200 79"
            fill="none"
          >
            <g clip-path="url(#clip0_1_3)">
              <path
                d="M160.93 79C139.247 79 121.607 61.2695 121.607 39.5254C121.607 17.7814 139.247 0 160.93 0C182.613 0 200.253 17.7305 200.253 39.5254C200.253 61.3203 182.613 79 160.93 79ZM160.93 2.54019C140.662 2.54019 124.134 19.1023 124.134 39.5254C124.134 59.8977 140.612 76.4598 160.93 76.4598C181.248 76.4598 197.726 59.8977 197.726 39.5254C197.726 19.1023 181.198 2.54019 160.93 2.54019Z"
                fill="#777777"
                fill-opacity="0.466667"
              />
              <path
                d="M160.93 69.3981C144.554 69.3981 131.211 55.9859 131.211 39.5254C131.211 23.065 144.554 9.65274 160.93 9.65274C177.306 9.65274 190.649 23.065 190.649 39.5254C190.649 55.9859 177.357 69.3981 160.93 69.3981ZM160.93 10.618C145.11 10.618 132.221 23.573 132.221 39.4746C132.221 55.3762 145.11 68.3312 160.93 68.3312C176.75 68.3312 189.639 55.3762 189.639 39.4746C189.639 23.573 176.801 10.618 160.93 10.618Z"
                fill="#777777"
                fill-opacity="0.466667"
              />
              <path
                d="M125.145 16.308C125.6 15.5968 126.055 14.8855 126.561 14.2251C126.156 13.9711 125.752 13.717 125.347 13.463C122.82 11.8881 120.243 10.2116 115.087 10.2116C109.932 10.2116 107.354 11.8373 104.827 13.463C102.502 14.9363 100.329 16.308 95.9313 16.308C91.4834 16.308 89.3101 14.9363 87.0356 13.463C84.5085 11.8881 81.9307 10.2116 76.7753 10.2116C71.6199 10.2116 69.0422 11.8373 66.515 13.463C64.19 14.9363 62.0167 16.308 57.6194 16.308C53.1716 16.308 50.9982 14.9363 48.7238 13.463C46.1966 11.8881 43.6189 10.2116 38.4635 10.2116C33.3081 10.2116 30.7303 11.8373 28.2032 13.463C25.7771 14.8855 23.6037 16.2572 19.1559 16.2572C14.7081 16.2572 12.5347 14.8855 10.2603 13.4122C7.73313 11.8373 5.15542 10.1608 0 10.1608V12.701C4.44781 12.701 6.62118 14.0727 8.89563 15.546C11.4228 17.1209 14.0005 18.7974 19.1559 18.7974C24.3113 18.7974 26.8891 17.1717 29.4162 15.546C31.7412 14.0727 33.9146 12.701 38.3119 12.701C42.7597 12.701 44.933 14.0727 47.2075 15.546C49.7346 17.1209 52.3124 18.7974 57.4678 18.7974C62.6232 18.7974 65.2009 17.1717 67.7281 15.546C70.0531 14.0727 72.2264 12.701 76.6237 12.701C81.021 12.701 83.2449 14.0727 85.5193 15.546C88.0465 17.1209 90.6242 18.7974 95.7796 18.7974C100.935 18.7974 103.513 17.1717 106.04 15.546C108.365 14.0727 110.538 12.701 114.936 12.701C119.333 12.701 121.557 14.0727 123.831 15.546C124.387 15.8 124.741 16.054 125.145 16.308Z"
                fill="#777777"
                fill-opacity="0.466667"
              />
              <path
                d="M121.304 23.7254C119.687 23.1158 117.715 22.6585 115.087 22.6585C109.932 22.6585 107.354 24.2842 104.827 25.91C102.502 27.3833 100.329 28.755 95.9313 28.755C91.4835 28.755 89.3101 27.3833 87.0356 25.91C84.5085 24.3351 81.9308 22.6585 76.7753 22.6585C71.6199 22.6585 69.0422 24.2842 66.515 25.91C64.1901 27.3833 62.0167 28.755 57.6194 28.755C53.1716 28.755 50.9982 27.3833 48.7238 25.91C46.1966 24.3351 43.6189 22.6585 38.4635 22.6585C33.3081 22.6585 30.7304 24.2842 28.2032 25.91C25.8782 27.3833 23.7048 28.755 19.3076 28.755C14.8598 28.755 12.6864 27.3833 10.4119 25.91C7.88477 24.3351 5.30706 22.6585 0.151642 22.6585V25.1987C4.59946 25.1987 6.77282 26.5704 9.04727 28.0437C11.5744 29.6187 14.1521 31.2952 19.3076 31.2952C24.463 31.2952 27.0407 29.6695 29.5679 28.0437C31.8929 26.5704 34.0662 25.1987 38.4635 25.1987C42.9113 25.1987 45.0847 26.5704 47.3591 28.0437C49.8863 29.6187 52.464 31.2952 57.6194 31.2952C62.7748 31.2952 65.3525 29.6695 67.8797 28.0437C70.2047 26.5704 72.3781 25.1987 76.7753 25.1987C81.1726 25.1987 83.3965 26.5704 85.671 28.0437C88.1981 29.6187 90.7758 31.2952 95.9313 31.2952C101.087 31.2952 103.664 29.6695 106.192 28.0437C108.517 26.5704 110.69 25.1987 115.087 25.1987C117.362 25.1987 119.03 25.5543 120.445 26.1132C120.748 25.3511 121.001 24.5383 121.304 23.7254Z"
                fill="#777777"
                fill-opacity="0.466667"
              />
              <path
                d="M118.524 35.4611C117.513 35.2579 116.401 35.1563 115.087 35.1563C109.932 35.1563 107.354 36.782 104.827 38.4077C102.502 39.881 100.329 41.2527 95.9313 41.2527C91.4835 41.2527 89.3101 39.881 87.0356 38.4077C84.5085 36.8328 81.9308 35.1563 76.7753 35.1563C71.6199 35.1563 69.0422 36.782 66.515 38.4077C64.1901 39.881 62.0167 41.2527 57.6194 41.2527C53.1716 41.2527 50.9982 39.881 48.7238 38.4077C46.1966 36.8328 43.6189 35.1563 38.4635 35.1563C33.3081 35.1563 30.7304 36.782 28.2032 38.4077C25.8782 39.881 23.7048 41.2527 19.3076 41.2527C14.8598 41.2527 12.6864 39.881 10.4119 38.4077C7.88477 36.8328 5.30706 35.1563 0.151642 35.1563V37.6965C4.59946 37.6965 6.77282 39.0682 9.04727 40.5415C11.5744 42.1164 14.1521 43.7929 19.3076 43.7929C24.463 43.7929 27.0407 42.1672 29.5679 40.5415C31.8929 39.0682 34.0662 37.6965 38.4635 37.6965C42.9113 37.6965 45.0847 39.0682 47.3591 40.5415C49.8863 42.1164 52.464 43.7929 57.6194 43.7929C62.7748 43.7929 65.3525 42.1672 67.8797 40.5415C70.2047 39.0682 72.3781 37.6965 76.7753 37.6965C81.2232 37.6965 83.3965 39.0682 85.671 40.5415C88.1981 42.1164 90.7758 43.7929 95.9313 43.7929C101.087 43.7929 103.664 42.1672 106.192 40.5415C108.517 39.0682 110.69 37.6965 115.087 37.6965C116.351 37.6965 117.412 37.7981 118.373 38.0013C118.423 37.1884 118.474 36.3248 118.524 35.4611Z"
                fill="#777777"
                fill-opacity="0.466667"
              />
              <path
                d="M119.181 48.1112C118.019 47.8572 116.654 47.7048 115.087 47.7048C109.932 47.7048 107.354 49.3305 104.827 50.9563C102.502 52.4296 100.329 53.8013 95.9313 53.8013C91.4835 53.8013 89.3101 52.4296 87.0356 50.9563C84.5085 49.3813 81.9308 47.7048 76.7753 47.7048C71.6199 47.7048 69.0422 49.3305 66.515 50.9563C64.1901 52.4296 62.0167 53.8013 57.6194 53.8013C53.1716 53.8013 50.9982 52.4296 48.7238 50.9563C46.1966 49.3813 43.6189 47.7048 38.4635 47.7048C33.3081 47.7048 30.7304 49.3305 28.2032 50.9563C25.8782 52.4296 23.7048 53.8013 19.3076 53.8013C14.8598 53.8013 12.6864 52.4296 10.4119 50.9563C7.88477 49.3813 5.30706 47.7048 0.151642 47.7048V50.245C4.59946 50.245 6.77282 51.6167 9.04727 53.09C11.5744 54.6649 14.1521 56.3415 19.3076 56.3415C24.463 56.3415 27.0407 54.7158 29.5679 53.09C31.8929 51.6167 34.0662 50.245 38.4635 50.245C42.9113 50.245 45.0847 51.6167 47.3591 53.09C49.8863 54.6649 52.464 56.3415 57.6194 56.3415C62.7748 56.3415 65.3525 54.7158 67.8797 53.09C70.2047 51.6167 72.3781 50.245 76.7753 50.245C81.1726 50.245 83.3965 51.6167 85.671 53.09C88.1981 54.6649 90.7758 56.3415 95.9313 56.3415C101.087 56.3415 103.664 54.7158 106.192 53.09C108.517 51.6167 110.69 50.245 115.087 50.245C117.058 50.245 118.575 50.499 119.889 50.9563C119.636 49.991 119.383 49.0765 119.181 48.1112Z"
                fill="#777777"
                fill-opacity="0.466667"
              />
              <path
                d="M125.802 63.708C125.651 63.6064 125.499 63.5048 125.347 63.4032C122.82 61.8283 120.243 60.1518 115.087 60.1518C109.932 60.1518 107.354 61.7775 104.827 63.4032C102.502 64.8765 100.329 66.2482 95.9313 66.2482C91.4835 66.2482 89.3101 64.8765 87.0356 63.4032C84.5085 61.8283 81.9308 60.1518 76.7753 60.1518C71.6199 60.1518 69.0422 61.7775 66.515 63.4032C64.1901 64.8765 62.0167 66.2482 57.6194 66.2482C53.1716 66.2482 50.9982 64.8765 48.7238 63.4032C46.1966 61.8283 43.6189 60.1518 38.4635 60.1518C33.3081 60.1518 30.7304 61.7775 28.2032 63.4032C25.8782 64.8765 23.7048 66.2482 19.3076 66.2482C14.8598 66.2482 12.6864 64.8765 10.4119 63.4032C7.88477 61.8283 5.30706 60.1518 0.151642 60.1518V62.692C4.59946 62.692 6.77282 64.0637 9.04727 65.537C11.5744 67.1119 14.1521 68.7884 19.3076 68.7884C24.463 68.7884 27.0407 67.1627 29.5679 65.537C31.8929 64.0637 34.0662 62.692 38.4635 62.692C42.9113 62.692 45.0847 64.0637 47.3591 65.537C49.8863 67.1119 52.464 68.7884 57.6194 68.7884C62.7748 68.7884 65.3525 67.1627 67.8797 65.537C70.2047 64.0637 72.3781 62.692 76.7753 62.692C81.1726 62.692 83.3965 64.0637 85.671 65.537C88.1981 67.1119 90.7758 68.7884 95.9313 68.7884C101.087 68.7884 103.664 67.1627 106.192 65.537C108.517 64.0637 110.69 62.692 115.087 62.692C119.484 62.692 121.708 64.0637 123.983 65.537C125.499 66.5022 127.117 67.5183 129.29 68.128C128.026 66.7563 126.864 65.283 125.802 63.708Z"
                fill="#777777"
                fill-opacity="0.466667"
              />
            </g>
            <defs>
              <clipPath id="clip0_1_3">
                <rect width="200" height="79" fill="white" />
              </clipPath>
            </defs>
          </svg>

          <svg
            className="absolute right-[60px] top-[30px] "
            xmlns="http://www.w3.org/2000/svg"
            width="80"
            height="100"
            viewBox="0 0 80 100"
            fill="none"
          >
            <g clip-path="url(#clip0_1_11)">
              <path
                d="M72.117 8.81721H7.88303V91.5592H72.117V8.81721Z"
                fill="#547883"
              />
              <path
                d="M63.3693 35.6989C64.1831 37.7957 64.6408 40.4301 64.6408 43.5484C64.6408 46.6667 63.7762 49.7312 62.0979 52.6344C60.3687 55.5376 58.3344 57.9032 55.944 59.6774C53.5537 61.4516 51.3668 62.3656 49.3833 62.3656C48.1119 62.3656 47.0947 61.9355 46.3318 61.0753C45.569 60.2151 45.0604 59.1398 44.8061 57.8495C41.602 61.2366 38.9065 62.957 36.7196 62.957C35.2447 62.957 33.719 62.1505 32.1424 60.5376C30.5149 58.9247 29.7521 57.3656 29.7521 55.9677C29.7521 54.5699 30.1589 52.8495 31.0235 50.8065C31.8881 48.7634 32.9561 46.7742 34.2276 44.8387C35.5499 42.9032 37.1265 41.2366 39.0083 39.8387C40.89 38.4409 42.67 37.7419 44.2975 37.7419C45.925 37.7419 47.6542 38.6022 49.3325 40.3226C51.0617 42.043 51.8754 43.871 51.8754 45.6989C51.8754 46.6667 51.6211 47.6882 51.0617 48.7634C51.5194 49.3548 51.7737 49.8387 51.7737 50.2688C51.7737 50.6989 51.672 51.4516 51.5194 52.5269C51.3668 53.6022 51.2142 54.4086 51.1634 54.8387C51.1125 55.3226 51.1634 55.6452 51.3159 55.8602C51.8754 55.8602 52.6383 55.3763 53.6554 54.4086C54.6726 53.4409 55.6898 51.9355 56.6561 49.8925C57.6224 47.8495 58.0801 45.7527 58.0801 43.5484C58.0801 39.8925 57.2155 37.0968 55.4355 35.1613C53.6554 33.2258 51.1634 32.2581 47.9084 32.2581C43.7889 32.2581 39.822 33.6022 36.0076 36.2366C32.1933 38.9247 29.1926 42.2581 27.0057 46.2366C24.8188 50.2151 23.6999 54.1935 23.6999 58.0645C23.6999 65.2151 27.0057 68.7634 33.5664 68.7634C36.9739 68.7634 40.0254 68.3333 42.7209 67.4194C45.213 66.5591 46.637 66.2366 47.0947 66.3978C47.5524 66.5591 47.7559 66.9355 47.7559 67.5806C47.7559 68.8172 46.993 70.0538 45.4673 71.1828C43.9415 72.3656 42.1615 73.2796 40.0763 73.9247C37.9911 74.5699 36.0585 74.9462 34.2784 74.9462C29.7521 74.9462 25.6325 73.2796 21.9199 70C18.2072 66.7204 16.3763 62.7957 16.3763 58.172C16.3763 54.5699 17.1901 50.8602 18.7667 47.043C20.3433 43.2258 22.4793 39.6774 25.1748 36.5054C27.8703 33.3333 31.2269 30.6989 35.2447 28.6559C39.2625 26.6129 43.5855 25.5914 48.3153 25.5914C52.9943 25.5914 56.8086 27.0968 59.7076 30.0538C61.2842 31.6667 62.5556 33.6022 63.3693 35.6989ZM36.3128 57.1505C37.5334 57.1505 39.3643 56.0753 41.7546 54.0323C44.1958 51.9355 45.6707 49.6774 46.1793 47.2043C46.281 46.828 46.4844 46.6129 46.7387 46.5054C46.1793 44.7312 45.4672 43.8172 44.6027 43.8172C42.7718 43.8172 40.7374 45.4301 38.5505 48.6559C36.3128 51.8817 35.2447 54.2473 35.2447 55.7527C35.2447 56.6667 35.6008 57.1505 36.3128 57.1505Z"
                fill="#AABCC1"
              />
            </g>
            <defs>
              <clipPath id="clip0_1_11">
                <rect width="80" height="100" fill="white" />
              </clipPath>
            </defs>
          </svg>
          <div className="w-full">
            <p className="my-[15px] text-[#547883] text-[21.06px] font-bold">
              Bình luận đi nàooo (∩˃o˂∩)♡~
            </p>

            <div className="mt-[55px] w-full bg-white border border-[#dcdcde]">
              <div className="h-[230px]">
                <input
                  value={comment}
                  onChange={handleCommentChange}
                  type="text"
                  className="w-full h-[50px] outline-none text-base px-5"
                  placeholder="Bình luận đi nào...."
                />
              </div>
              <div className="border-t h-[74px] border-[#dcdcde] p-4 flex justify-end">
                <button
                  onClick={handleCommentSubmit}
                  className="border border-[#dcdcde] rounded py-[7px] px-5 text-[#A7AAAD] text-sm"
                >
                  Bình luận
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

export default FooterCard;
